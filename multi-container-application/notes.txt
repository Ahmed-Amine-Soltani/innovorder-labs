to create gke cluster
gcloud beta container --project "innovorder-lab" clusters create "cluster-lab-1" 
    --zone "europe-west1-b" 
    --no-enable-basic-auth -
    -cluster-version "1.20.9-gke.1001" 
    --release-channel "None" 
    --machine-type "e2-medium" 
    --image-type "COS_CONTAINERD" -
    -disk-type "pd-standard" 
    --disk-size "50" 
    --metadata disable-legacy-endpoints=true 
    --scopes "https://www.googleapis.com/auth/ndev.clouddns.readwrite",
             "https://www.googleapis.com/auth/devstorage.read_only",
             "https://www.googleapis.com/auth/logging.write",
             "https://www.googleapis.com/auth/monitoring",
             "https://www.googleapis.com/auth/servicecontrol",
             "https://www.googleapis.com/auth/service.management.readonly",
             "https://www.googleapis.com/auth/trace.append" 
    --max-pods-per-node "110" 
    --num-nodes "2" 
    --logging=SYSTEM,WORKLOAD 
    --monitoring=SYSTEM 
    --enable-ip-alias 
    --network "projects/innovorder-lab/global/networks/vpc-lab" 
    --subnetwork "projects/innovorder-lab/regions/europe-west1/subnetworks/subnet-1" 
    --no-enable-intra-node-visibility --default-max-pods-per-node "110" 
    --no-enable-master-authorized-networks 
    --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver 
    --enable-autoupgrade 
    --enable-autorepair 
    --max-surge-upgrade 1 
    --max-unavailable-upgrade 0 
    --enable-shielded-nodes 
    --node-locations "europe-west1-b"


gcloud beta container --project "innovorder-lab" clusters create "cluster-lab-1" --zone "europe-west1-b" --no-enable-basic-auth --cluster-version "1.20.9-gke.1001" --release-channel "None" --machine-type "e2-medium" --image-type "COS_CONTAINERD" --disk-type "pd-standard" --disk-size "50" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append"  --max-pods-per-node "110"  --num-nodes "2"  --logging=SYSTEM,WORKLOAD   --monitoring=SYSTEM  --enable-ip-alias  --network "projects/innovorder-lab/global/networks/vpc-lab"  --subnetwork "projects/innovorder-lab/regions/europe-west1/subnetworks/subnet-1"  --no-enable-intra-node-visibility --default-max-pods-per-node "110"  --no-enable-master-authorized-networks  --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver  --enable-autoupgrade  --enable-autorepair  --max-surge-upgrade 1  --max-unavailable-upgrade 0  --enable-shielded-nodes --node-locations "europe-west1-b" --workload-pool=innovorder-lab.svc.id.goog



to delete cluster
gcloud container clusters delete cluster-lab-1 --zone=europe-west1-b

to create kybeconfig entry to use local kubectl with gke cluster
gcloud container clusters get-credentials cluster-lab-1 --zone europe-west1-b

to ssh node
gcloud compute ssh node-name  --zone=
to get node name
kubectl get nodes -o wide

to check in which namespace i'm
kubectl config view --minify | grep namespace
to swich other namespace
kubectl config set-context $(kubectl config current-context) --namespace namespace-name

to create secret
kubectl create secret generic pgpassword --from-literal PGPASSWORD=

to deploy ingress controller
kubectl create -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.3/deploy/static/provider/cloud/deploy.yaml

to install helm
https://helm.sh/docs/intro/install/
to install specific version
./get_helm.sh --version v3.5.0


helm & gke 
https://cloud.google.com/artifact-registry/docs/helm/quickstart
----------------------------------
export HELM_EXPERIMENTAL_OCI=1
export DOCKER_CONFIG=~/.docker #!!!! si je laisse les ~/.docker avec "" comme la doc j'aurai un dossier '~' dans mon pwd
export HELM_REGISTRY_CONFIG="${DOCKER_CONFIG}/config.json"


to deploy external dns in gke
https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/gke.md

to deploy external dns using helm
https://medium.com/swlh/extending-gke-with-externaldns-d02c09157793
https://github.com/kubernetes-sigs/external-dns/tree/external-dns-helm-chart-1.3.2/charts/external-dns




workload identity & external dns
https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
to create gsa you can use --display-name="Kubernetes external dns"
for external dns you need to use  --role=roles/dns.admin
deprecated https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/gke.md

to do 
https://cloud.google.com/kubernetes-engine/docs/tutorials/http-balancer#optional_configuring_a_static_ip_address
change the secret to configmap or in the applicatif level 
change the deployment postgress to statfullset

